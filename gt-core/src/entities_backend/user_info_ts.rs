//! `SeaORM` Entity. Generated by sea-orm-codegen 0.10.6

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Serialize, Deserialize)]
#[sea_orm(table_name = "user_info_ts")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub user_id: i32,
    pub height: Option<f32>,
    pub weight: Option<f32>,
    pub muscle_mass: Option<f32>,
    pub body_fat: Option<f32>,
    pub created_at: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::user_login::Entity",
        from = "Column::UserId",
        to = "super::user_login::Column::Id",
        on_update = "Cascade",
        on_delete = "Cascade"
    )]
    UserLogin,
}

impl Related<super::user_login::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserLogin.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
